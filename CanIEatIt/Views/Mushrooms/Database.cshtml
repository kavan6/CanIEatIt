@model CanIEatIt.Models.MushroomViewModel
@using CanIEatIt.Services
@using System.IO


@{
    ViewData["Title"] = "Mushroom Database";

    Model.SearchName = "Name...";

    Model.SearchEdibleDes = "Edible Keyword(s)...";
    Model.SearchCapDes = "Cap Keyword(s)...";
    Model.SearchStemDes = "Stem Keyword(s)...";
    Model.SearchSporeDes = "Spore Keyword(s)...";
    Model.SearchGillDes = "Gill Keyword(s)...";


    Model.SearchStemHeight = "0";
    Model.SearchCapDiameter = "0";
}

@section Scripts
{
    <script type="text/javascript">

        (function (window, document, undefined) {


        })(window, document, undefined);


    </script>

}


<form asp-controller="Mushrooms" asp-action="Database" method="get">
    <div class="container">

        <div class="row mt-3 mx-3">

            <div class="col-lg-2"></div>

            <div class="col">
                <div class="row flex searchbar mt-3 mb-3">

                    <div class="col mt-0 nopadding">
                            <input class="input searchbar-form-text" id="searchbar-search" type="text" value="Search mushrooms..." onclick="wipeInputBox(this);" onkeyup="grabSearchValue(this);"/>
                    </div>

                    <div class="col divider-col" style="margin-right: 0.4em !important;">
                    </div>

                    <div class="col mt-0 nopadding">
                            <select class="input searchbar-form-select" id="searchbar-selector" asp-for="SearchEdible" asp-items="Model.Edibles" onclick="changeChevron()">
                                <option value="">Edible?</option>
                            </select>
                    </div>

                    <div class="col icon-col">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16" id="dropdown-chevron" onclick="changeChevron();">
                                <path id="chevron-path" fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708" />
                        </svg>
                    </div>

                    <div class="col divider-col">
                    </div>

                    <div class="col-lg-2 col-sm-1 mt-0 nopadding d-flex justify-content-center">
                        <div class="" style="width: 90%">
                            <input class="btn-primary searchbar-form-button" type="submit" value="Search" onclick="" />
                        </div>
                    </div>

                </div>

            </div>

            <div class="col-lg-2"></div>
        </div>

    </div>

    <div class="container-fluid">

                <div class="row mt-3">
                    <div class="col-lg-2 mb-3">
                        <div class="accordion accordion-flush filter-accordion" id="accordion-mfilters">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="accordion-mheading1">
                                    <button class="accordion-button acc-btn" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-m1" aria-expanded="false" aria-controls="collapse-m1">
                                        Filters
                                    </button>
                                </h2>
                                <div id="collapse-m1" class="accordion-collapse collapse show" aria-labelledby="accordion-mheading1" data-bs-parent="accordion-mfilters">
                                    <div class="accordion-body">

                                        <div class="col justify-content-center">

                                            <input class="input accordion-input" id="input-name" type="text" asp-for="SearchName" onclick="wipeInputBox(this);" />

                                            <div class="accordion accordion-flush filter-accordion" id="accordion-mlocations">
                                                <div class="accordion-item">
                                                    <h2 class="accordion-header" id="accordion-mlheading1">
                                                        <button class="accordion-button collapsed acc-btn" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-ml1" aria-expanded="true" aria-controls="collapse-ml1">
                                                            Locations
                                                        </button>
                                                    </h2>
                                                    <div id="collapse-ml1" class="accordion-collapse collapse" aria-labelledby="accordion-mlheading1" data-bs-parent="#accordion-mlocations">
                                                        <div class="accordion-body">
                                                            <div>
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox" value="All" id="location-check-default" name="searchLocation" onclick="checkAll(this)">
                                                                    <label class="form-check-label" for="location-check-default">
                                                                        All
                                                                    </label>
                                                                </div>
                                                                <div id="check-list">
                                                                    @foreach (var location in Model.Locations!)
                                                                    {
                                                                        <div class="form-check">
                                                                            <input class="form-check-input location-check" type="checkbox" name="searchLocation" value="@location.Value" id="flexCheckDefault">
                                                                            <label class="form-check-label" for="flexCheckDefault">
                                                                                @location.Text
                                                                            </label>
                                                                        </div>
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="accordion accordion-flush filter-accordion" id="accordion-mfamilies">
                                                <div class="accordion-item">
                                                    <h2 class="accordion-header" id="accordion-mfheading1">
                                                <button class="accordion-button collapsed acc-btn"type="button" data-bs-toggle="collapse" data-bs-target="#collapse-mf1" aria-expanded="true" aria-controls="collapse-mf1">
                                                            Families
                                                        </button>
                                                    </h2>
                                                    <div id="collapse-mf1" class="accordion-collapse collapse" aria-labelledby="accordion-mfheading1" data-bs-parent="#accordion-mfamilies">
                                                        <div class="accordion-body">
                                                            <div>
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox" value="All" id="family-check-default" name="searchFamily" onclick="checkAll(this)">
                                                                    <label class="form-check-label" for="family-check-default">
                                                                        All
                                                                    </label>
                                                                </div>
                                                                <div id="check-list">
                                                                    @foreach (var family in Model.Families!)
                                                                    {
                                                                        <div class="form-check">
                                                                            <input class="form-check-input family-check" type="checkbox" name="searchFamily" value="@family.Text" id="flexCheckDefault">
                                                                            <label class="form-check-label" for="flexCheckDefault">
                                                                                @family.Text
                                                                            </label>
                                                                        </div>
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <label for="cap-range" class="form-label" style="font-family: 'Outfit'">Cap Diameter:</label>
                                            <output class="">Any</output>
                                            <input type="range" class="form-range" min="0" max="100" step="1" id="cap-range" asp-for="SearchCapDiameter" oninput="setRangeAny(this)">

                                            <label for="stem-range" class="form-label" style="font-family: 'Outfit'">Stem Height:</label>
                                            <output class="">Any</output>
                                            <input type="range" class="form-range" min="0" max="100" step="1" id="stem-range" asp-for="SearchStemHeight" oninput="setRangeAny(this)">

@*                                             <input class="input accordion-input" id="input-edible" type="text" asp-for="SearchEdibleDes" onclick="wipeInputBox(this);"/>

                                            <input class="input accordion-input" id="input-cap" type="text" asp-for="SearchCapDes" onclick="wipeInputBox(this);"/>

                                            <input class="input accordion-input" id="input-stem" type="text" asp-for="SearchStemDes" onclick="wipeInputBox(this);"/>

                                            <input class="input accordion-input" id="input-gill" type="text" asp-for="SearchGillDes" onclick="wipeInputBox(this);"/>

                                            <input class="input accordion-input" id="input-spore" type="text" asp-for="SearchSporeDes" onclick="wipeInputBox(this);"/> *@

                                            <div class="col mt-0 nopadding">
                                                    <div class="keywords-filter nopadding" id="input-keywords-filter" onclick="Array.from(this.children).find(n => n.tagName==='INPUT').focus()">
                                                        <input class="input accordion-input" id="input-keywords" value="Keywords..." type="text" onclick="wipeInputBox(this);" />
                                                    </div>
                                            </div>

@*                                             <input class="input accordion-input" id="input-micro" value="Microscopic Keyword(s)..." type="text" asp-for="SearchMicroDes" onclick="wipeInputBox(this);"/>
 *@
@*                                             <input class="input accordion-input" id="input-note" value="Note Keyword(s)..." type="text" asp-for="SearchNote" onclick="wipeInputBox(this);" />
 *@                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 mb-3" id="mushroom-slot-1">
                        @foreach (var item in Model.Mushrooms!.Where((x, i) => i % 3 == 0))
                        {
                        <a asp-action="Information" asp-route-id="@item.Id" class="card-link">
                        <div class="card display-card text-black mb-3">
                            <div class="card-header">
                                @Html.DisplayFor(modelItem => item.Name)
                                <div class="float-end">
                                    @if (item.Edible == true)
                                    {
                                        <span class="badge badge-success">Edible</span>

                                    }
                                    else
                                    {
                                        <span class="badge badge-danger">Inedible</span>
                                    }
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="card-image mb-3">   
                                    @if (Directory.Exists("wwwroot/images/Mushrooms/" + item.Name))
                                    {
                                        @if (Directory.GetFiles("wwwroot/images/Mushrooms/" + item.Name).Any())
                                        {
                                            <img src="@Directory.GetFiles("wwwroot/images/Mushrooms/" + item.Name).First().Remove(0, 7)" class="card-img" />
                                        }
                                    }
                                </div>

							    <p class="card-text mb-1">
                                    <b> Family: </b>
                                    @Html.DisplayFor(modelItem => item.Family)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Location: </b>
                                    @Html.DisplayFor(modelItem => item.Location)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Dimensions: </b>
                                    Cap @Html.DisplayFor(modelItem => item.CapDiameter) diameter,  Stem @Html.DisplayFor(modelItem => item.StemHeight) tall
                                </p>
                                @if (item.Edible == true)
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> Yes
                                    </p>
                                } else
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> No
                                    </p>
                                }
                                <p class="card-text mb-1">
                                    <b> Cap: </b>
                                    @Html.DisplayFor(modelItem => item.CapDescription)
                                </p>
                                <p class="card-text">
                                    <b> Stem: </b>
                                    @Html.DisplayFor(modelItem => item.StemDescription)
                                </p>
                            </div>
                        </div>
                        </a>
                        }
                    </div>
                    <div class="col-lg-3 mb-3" id="mushroom-slot-2">
                        @foreach (var item in Model.Mushrooms!.Where((x, i) => i % 3 == 1))
                        {
                        <a asp-action="Information" asp-route-id="@item.Id" class="card-link">
                        <div class="card display-card text-black mb-3">
                            <div class="card-header">
                                @Html.DisplayFor(modelItem => item.Name)
                                <div class="float-end">
                                    @if (item.Edible == true)
                                    {
                                        <span class="badge badge-success">Edible</span>

                                    }
                                    else
                                    {
                                        <span class="badge badge-danger">Inedible</span>
                                    }
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="card-image mb-3">
                                    @if (Directory.Exists("wwwroot/images/Mushrooms/" + item.Name))
                                    {
                                        @if (Directory.GetFiles("wwwroot/images/Mushrooms/" + item.Name).Any())
                                        {
                                            <img src="@Directory.GetFiles("wwwroot/images/Mushrooms/" + item.Name).First().Remove(0, 7)" class="card-img" />
                                        }
                                    }
                                </div>

                                <p class="card-text mb-1">
                                    <b> Family: </b>
                                    @Html.DisplayFor(modelItem => item.Family)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Location: </b>
                                    @Html.DisplayFor(modelItem => item.Location)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Dimensions: </b>
                                    Cap @Html.DisplayFor(modelItem => item.CapDiameter) diameter,  Stem @Html.DisplayFor(modelItem => item.StemHeight) tall
                                </p>
                                @if (item.Edible == true)
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> Yes
                                    </p>
                                }
                                else
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> No
                                    </p>
                                }
                                <p class="card-text mb-1">
                                    <b> Cap: </b>
                                    @Html.DisplayFor(modelItem => item.CapDescription)
                                </p>
                                <p class="card-text">
                                    <b> Stem: </b>
                                    @Html.DisplayFor(modelItem => item.StemDescription)
                                </p>
                            </div>
                        </div>
                        </a>
                        }
                    </div>
                    <div class="col-lg-3 mb-3" id="mushroom-slot-3">
                        @foreach (var item in Model.Mushrooms!.Where((x, i) => i % 3 == 2))
                        {
                        <a asp-action="Information" asp-route-id="@item.Id" class="card-link">
                        <div class="card display-card text-black mb-3">
                            <div class="card-header">
                                @Html.DisplayFor(modelItem => item.Name)
                                <div class="float-end">
                                    @if (item.Edible == true)
                                    {
                                        <span class="badge badge-success">Edible</span>

                                    }
                                    else
                                    {
                                        <span class="badge badge-danger">Inedible</span>
                                    }
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="card-image mb-3">
                                    @if (Directory.Exists("wwwroot/images/Mushrooms/" + item.Name))
                                    {
                                        @if (Directory.GetFiles("wwwroot/images/Mushrooms/" + item.Name).Any())
                                        {
                                            <img src="@Directory.GetFiles("wwwroot/images/Mushrooms/" + item.Name).First().Remove(0, 7)" class="card-img"/>
                                        }
                                    }
                                </div>

                                <p class="card-text mb-1">
                                    <b> Family: </b>
                                    @Html.DisplayFor(modelItem => item.Family)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Location: </b>
                                    @Html.DisplayFor(modelItem => item.Location)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Dimensions: </b>
                                    Cap @Html.DisplayFor(modelItem => item.CapDiameter) diameter,  Stem @Html.DisplayFor(modelItem => item.StemHeight) tall
                                </p>
                                @if (item.Edible == true)
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> Yes
                                    </p>
                                }
                                else
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> No
                                    </p>
                                }
                                <p class="card-text mb-1">
                                    <b> Cap: </b>
                                    @Html.DisplayFor(modelItem => item.CapDescription)
                                </p>
                                <p class="card-text">
                                    <b> Stem: </b>
                                    @Html.DisplayFor(modelItem => item.StemDescription)
                                </p>
                            </div>
                        </div>
                        </a>
                        }
                    </div>

                    <div class="col-lg-2 mb-3">

                    </div>
                </div>

    </div>
</form>

<div>
    <span>
    </span>
</div>
