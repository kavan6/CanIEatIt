@model CanIEatIt.Models.MushroomViewModel
@using CanIEatIt.Services


@{
    ViewData["Title"] = "Mushroom Database";
}

@section Scripts
{
    <script type="text/javascript">

        (function (window, document, undefined) {


        })(window, document, undefined);


    </script>

}


<form asp-controller="Mushrooms" asp-action="Database" method="get">
    <div class="container">
        <div class="row mt-3 mb-3">

            <div class="col mt-auto">
                <input class="input search-form-input bottom" id="input-name" value="Name..." type="text" asp-for="SearchName" />

            </div>

            <div class="col mt-auto">
                Location:
                <select class="input search-form-select bottom" asp-for="SearchLocation" asp-items="Model.Locations">
                    <option value="">All</option>
                </select>
            </div>


            <div class="col mt-auto">
                Edible?:
                <select class="input search-form-select bottom" asp-for="SearchEdible" asp-items="Model.Edibles">
                    <option value="">All</option>
                </select>
            </div>


            <div class="col mt-auto">
                <div class="search-form-input keywords-filter bottom" onclick="Array.from(this.children).find(n => n.tagName==='INPUT').focus()">
                    <input class="input search-form-input" id="input-keywords" value="Keywords..." type="text" asp-for="SearchKeyWords" onclick="wipeInputBox(this);" />
                </div>
            </div>

            <div class="col mt-auto">
                <input class="btn btn-primary" type="submit" value="Search" onclick="UpdateCards()" />
            </div>

            <div class="col mt-auto">
                <button class="btn btn-primary" asp-action="Create"> Create New </button>
            </div>

        </div>

    </div>

    <div class="container-fluid">

                <div class="row mt-3">
                    <div class="col-sm-2 mb-3">
                        <div class="accordion accordion-flush filter-accordion" id="accordion-mfilters">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="accordion-mheading1">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-m1" aria-expanded="false" aria-controls="collapse-m1">
                                        Filters
                                    </button>
                                </h2>
                                <div id="collapse-m1" class="accordion-collapse collapse" aria-labelledby="accordion-mheading1" data-bs-parent="accordion-mfilters">
                                    <div class="accordion-body">
                                        Family:
                                        <select class="search-form-input" asp-for="SearchFamily" asp-items="Model.Families">
                                            <option value="">All</option>
                                        </select>

                                        Cap Diameter (cm): <input class="input search-form-input" type="text" asp-for="SearchCapDiameter" />

                                        Stem Height (cm): <input class="input search-form-input" type="text" asp-for="SearchStemHeight" />

                                        Edible Keyword(s): <input class="input search-form-input" type="text" asp-for="SearchEdibleDes" />

                                        Cap Keyword(s): <input class="input search-form-input" type="text" asp-for="SearchCapDes" />

                                        Stem Keyword(s): <input class="input search-form-input" type="text" asp-for="SearchStemDes" />

                                        Gill Keyword(s): <input class="input search-form-input" type="text" asp-for="SearchGillDes" />

                                        Spore Keyword(s): <input class="input search-form-input" type="text" asp-for="SearchSporeDes" />

                                        Microscopic Keyword(s): <input class="input search-form-input" type="text" asp-for="SearchMicroDes" />

                                        Note Keyword(s): <input class="input search-form-input" type="text" asp-for="SearchNote" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 mb-3" id="mushroom-slot-1">
                        @foreach (var item in Model.Mushrooms!.Where((x, i) => i % 3 == 0))
                        {
                        <a asp-action="Information" asp-route-id="@item.Id" class="card-link">
                        <div class="card display-card text-black mb-3">
                            <div class="card-header">
                                @Html.DisplayFor(modelItem => item.Name)
                                <div class="float-end">
                                    @if (item.Edible == true)
                                    {
                                        <span class="badge badge-success">Edible</span>

                                    }
                                    else
                                    {
                                        <span class="badge badge-danger">Inedible</span>
                                    }
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="card-image mb-3">
                                    <img />
                                </div>

							    <p class="card-text mb-1">
                                    <b> Family: </b>
                                    @Html.DisplayFor(modelItem => item.Family)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Location: </b>
                                    @Html.DisplayFor(modelItem => item.Location)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Dimensions: </b>
                                    Cap @Html.DisplayFor(modelItem => item.CapDiameter) diameter,  Stem @Html.DisplayFor(modelItem => item.StemHeight) tall
                                </p>
                                @if (item.Edible == true)
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> Yes
                                    </p>
                                } else
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> No
                                    </p>
                                }
                                <p class="card-text mb-1">
                                    <b> Cap: </b>
                                    @Html.DisplayFor(modelItem => item.CapDescription)
                                </p>
                                <p class="card-text">
                                    <b> Stem: </b>
                                    @Html.DisplayFor(modelItem => item.StemDescription)
                                </p>
                            </div>
                        </div>
                        </a>
                        }
                    </div>
                    <div class="col-lg-3 mb-3" id="mushroom-slot-2">
                        @foreach (var item in Model.Mushrooms!.Where((x, i) => i % 3 == 1))
                        {
                        <a asp-action="Information" asp-route-id="@item.Id" class="card-link">
                        <div class="card display-card text-black mb-3">
                            <div class="card-header">
                                @Html.DisplayFor(modelItem => item.Name)
                                <div class="float-end">
                                    @if (item.Edible == true)
                                    {
                                        <span class="badge badge-success">Edible</span>

                                    }
                                    else
                                    {
                                        <span class="badge badge-danger">Inedible</span>
                                    }
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="card-image mb-3">
                                    <img />
                                </div>

                                <p class="card-text mb-1">
                                    <b> Family: </b>
                                    @Html.DisplayFor(modelItem => item.Family)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Location: </b>
                                    @Html.DisplayFor(modelItem => item.Location)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Dimensions: </b>
                                    Cap @Html.DisplayFor(modelItem => item.CapDiameter) diameter,  Stem @Html.DisplayFor(modelItem => item.StemHeight) tall
                                </p>
                                @if (item.Edible == true)
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> Yes
                                    </p>
                                }
                                else
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> No
                                    </p>
                                }
                                <p class="card-text mb-1">
                                    <b> Cap: </b>
                                    @Html.DisplayFor(modelItem => item.CapDescription)
                                </p>
                                <p class="card-text">
                                    <b> Stem: </b>
                                    @Html.DisplayFor(modelItem => item.StemDescription)
                                </p>
                            </div>
                        </div>
                        </a>
                        }
                    </div>
                    <div class="col-lg-3 mb-3" id="mushroom-slot-3">
                        @foreach (var item in Model.Mushrooms!.Where((x, i) => i % 3 == 2))
                        {
                        <a asp-action="Information" asp-route-id="@item.Id" class="card-link">
                        <div class="card display-card text-black mb-3">
                            <div class="card-header">
                                @Html.DisplayFor(modelItem => item.Name)
                                <div class="float-end">
                                    @if (item.Edible == true)
                                    {
                                        <span class="badge badge-success">Edible</span>

                                    }
                                    else
                                    {
                                        <span class="badge badge-danger">Inedible</span>
                                    }
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="card-image mb-3">
                                    <img />
                                </div>

                                <p class="card-text mb-1">
                                    <b> Family: </b>
                                    @Html.DisplayFor(modelItem => item.Family)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Location: </b>
                                    @Html.DisplayFor(modelItem => item.Location)
                                </p>
                                <p class="card-text mb-1">
                                    <b> Dimensions: </b>
                                    Cap @Html.DisplayFor(modelItem => item.CapDiameter) diameter,  Stem @Html.DisplayFor(modelItem => item.StemHeight) tall
                                </p>
                                @if (item.Edible == true)
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> Yes
                                    </p>
                                }
                                else
                                {
                                    <p class="card-text mb-1">
                                        <b> Edible: </b> No
                                    </p>
                                }
                                <p class="card-text mb-1">
                                    <b> Cap: </b>
                                    @Html.DisplayFor(modelItem => item.CapDescription)
                                </p>
                                <p class="card-text">
                                    <b> Stem: </b>
                                    @Html.DisplayFor(modelItem => item.StemDescription)
                                </p>
                            </div>
                        </div>
                        </a>
                        }
                    </div>
                </div>

    </div>
</form>

<div>
    <span>
    </span>
</div>
